Вот схема работы компонента регистрации:

```
┌─────────────────────────────────────────────────────────────────────────┐
│                    КОМПОНЕНТ RegistrationForm                           │
└─────────────────────────────────────────────────────────────────────────┘
                              │
                              ▼
┌─────────────────────────────────────────────────────────────────────────┐
│  ИНИЦИАЛИЗАЦИЯ КОМПОНЕНТА                                               │
│  - useState: showPassword, showConfirmPassword, isLoading               │
│  - useForm: настройка формы с Zod валидацией                           │
│  - watch: отслеживание полей login и password                          │
└─────────────────────────────────────────────────────────────────────────┘
                              │
                              ▼
┌─────────────────────────────────────────────────────────────────────────┐
│  РЕНДЕРИНГ ФОРМЫ                                                        │
│  ┌─────────────────┐  ┌─────────────────┐  ┌─────────────────────────┐ │
│  │   Поле логина   │  │   Поле пароля   │  │ Подтверждение пароля    │ │
│  │ • Валидация:    │  │ • Валидация:    │  │ • Валидация совпадения  │ │
│  │   - длина 3-20  │  │   - мин. 8 симв.│  │ • Индикатор видимости   │ │
│  │   - a-z,A-Z,0-9_│  │   - сложность   │  │                         │ │
│  │ • Индикатор ✓   │  │ • Индикатор     │  │                         │ │
│  │                 │  │   силы пароля   │  │                         │ │
│  └─────────────────┘  │ • Индикатор     │  └─────────────────────────┘ │
│                       │   видимости     │                             │
│                       └─────────────────┘                             │
└─────────────────────────────────────────────────────────────────────────┘
                              │
                              ▼
┌─────────────────────────────────────────────────────────────────────────┐
│  ВЗАИМОДЕЙСТВИЕ ПОЛЬЗОВАТЕЛЯ                                            │
│  • Ввод данных в поля формы                                             │
│  • Валидация в реальном времени (onChange)                              │
│  • Переключение видимости пароля                                        │
│  • Отображение индикатора силы пароля                                  │
└─────────────────────────────────────────────────────────────────────────┘
                              │
                              ▼
┌─────────────────────────────────────────────────────────────────────────┐
│  ОТПРАВКА ФОРМЫ (handleSubmit)                                          │
│  1. Проверка валидации Zod                                              │
│  2. Если ошибки → показ сообщений                                       │
│  3. Если успешно → вызов onSubmit                                       │
└─────────────────────────────────────────────────────────────────────────┘
                              │
                              ▼
┌─────────────────────────────────────────────────────────────────────────┐
│  ПРОЦЕСС РЕГИСТРАЦИИ (onSubmit)                                         │
│  │                                                                      │
│  ├─ 1. setIsLoading(true)                                               │
│  ├─ 2. Отправка POST-запроса на /api/register                           │
│  ├─ 3. Обработка ответа:                                                │
│  │    ┌─────────────┐  ┌─────────────┐                                  │
│  │    │  УСПЕХ 200  │  │  ОШИБКА 4xx/5xx │                              │
│  │    │ • toast ✓   │  │ • toast ✗     │                              │
│  │    │ • reset()   │  │ • сохранение  │                              │
│  │    └─────────────┘  │   данных формы│                              │
│  │                     └─────────────┘                                  │
│  └─ 4. setIsLoading(false)                                              │
└─────────────────────────────────────────────────────────────────────────┘

```

**Дополнительные блоки схемы:**

```
┌─────────────────────────────────────────────────────────────────────────┐
│  ВАЛИДАЦИЯ ZOD SCHEMA                                                   │
┌─────────────────┬─────────────────┬─────────────────────────────────────┐
│ Логин:          │ Пароль:         │ Подтверждение:                      │
│ • min: 3        │ • min: 8        │ • совпадение с password            │
│ • max: 20       │ • заглавная     │                                     │
│ • a-z,A-Z,0-9,_ │ • строчная      │                                     │
│                 │ • цифра         │                                     │
│                 │ • спец. символ  │                                     │
└─────────────────┴─────────────────┴─────────────────────────────────────┘
```

```
┌─────────────────────────────────────────────────────────────────────────┐
│  ИНДИКАТОР СИЛЫ ПАРОЛЯ (getPasswordStrength)                            │
│  ┌─────┬──────────┬────────────┬───────────────────────────────────────┐│
│  │Баллы│Качество  │Цвет        │Критерии                               ││
│  ├─────┼──────────┼────────────┼───────────────────────────────────────┤│
│  │  1  │Очень     │red         │длина ≥ 8                              ││
│  │     │слабый    │            │                                       ││
│  ├─────┼──────────┼────────────┼───────────────────────────────────────┤│
│  │  2  │Слабый    │orange      │+ строчная буква                       ││
│  ├─────┼──────────┼────────────┼───────────────────────────────────────┤│
│  │  3  │Средний   │yellow      │+ заглавная буква                      ││
│  ├─────┼──────────┼────────────┼───────────────────────────────────────┤│
│  │  4  │Хороший   │blue        │+ цифра                                ││
│  ├─────┼──────────┼────────────┼───────────────────────────────────────┤│
│  │  5  │Отличный  │green       │+ спец. символ                         ││
│  └─────┴──────────┴────────────┴───────────────────────────────────────┘│
└─────────────────────────────────────────────────────────────────────────┘
```

**Поток данных:**
1. **Mount** → Инициализация состояния и формы
2. **Input** → Пользователь вводит данные → Валидация → UI feedback
3. **Submit** → Валидация → API запрос → Обработка ответа → UI уведомление
4. **Success** → Сброс формы → Показ успеха
5. **Error** → Сохранение данных → Показ ошибки

Схема показывает полный цикл работы компонента от инициализации до обработки результатов регистрации.
